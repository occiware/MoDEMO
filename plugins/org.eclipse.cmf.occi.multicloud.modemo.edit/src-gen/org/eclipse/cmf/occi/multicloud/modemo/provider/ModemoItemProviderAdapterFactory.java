/**
 * Copyright (c) 2015-2017 Obeo, Inria
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 	
 * Contributors:
 * - William Piers <william.piers@obeo.fr>
 * - Philippe Merle <philippe.merle@inria.fr>
 * - Faiez Zalila <faiez.zalila@inria.fr>
 */
package org.eclipse.cmf.occi.multicloud.modemo.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.cmf.occi.multicloud.modemo.util.ModemoAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ModemoItemProviderAdapterFactory extends ModemoAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ModemoItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.RecurrenceStep} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecurrenceStepItemProvider recurrenceStepItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.RecurrenceStep}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecurrenceStepAdapter() {
		if (recurrenceStepItemProvider == null) {
			recurrenceStepItemProvider = new RecurrenceStepItemProvider(this);
		}

		return recurrenceStepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Array} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayItemProvider arrayItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Array}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayAdapter() {
		if (arrayItemProvider == null) {
			arrayItemProvider = new ArrayItemProvider(this);
		}

		return arrayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.ArrofRecStep} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrofRecStepItemProvider arrofRecStepItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.ArrofRecStep}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrofRecStepAdapter() {
		if (arrofRecStepItemProvider == null) {
			arrofRecStepItemProvider = new ArrofRecStepItemProvider(this);
		}

		return arrofRecStepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Horizontalgroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HorizontalgroupItemProvider horizontalgroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Horizontalgroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHorizontalgroupAdapter() {
		if (horizontalgroupItemProvider == null) {
			horizontalgroupItemProvider = new HorizontalgroupItemProvider(this);
		}

		return horizontalgroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadbalancerItemProvider loadbalancerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadbalancerAdapter() {
		if (loadbalancerItemProvider == null) {
			loadbalancerItemProvider = new LoadbalancerItemProvider(this);
		}

		return loadbalancerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Elasticitycontroller} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElasticitycontrollerItemProvider elasticitycontrollerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Elasticitycontroller}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElasticitycontrollerAdapter() {
		if (elasticitycontrollerItemProvider == null) {
			elasticitycontrollerItemProvider = new ElasticitycontrollerItemProvider(this);
		}

		return elasticitycontrollerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Instancegrouplink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstancegrouplinkItemProvider instancegrouplinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Instancegrouplink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstancegrouplinkAdapter() {
		if (instancegrouplinkItemProvider == null) {
			instancegrouplinkItemProvider = new InstancegrouplinkItemProvider(this);
		}

		return instancegrouplinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancerlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadbalancerlinkItemProvider loadbalancerlinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancerlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadbalancerlinkAdapter() {
		if (loadbalancerlinkItemProvider == null) {
			loadbalancerlinkItemProvider = new LoadbalancerlinkItemProvider(this);
		}

		return loadbalancerlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Elasticlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElasticlinkItemProvider elasticlinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Elasticlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElasticlinkAdapter() {
		if (elasticlinkItemProvider == null) {
			elasticlinkItemProvider = new ElasticlinkItemProvider(this);
		}

		return elasticlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Rule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleItemProvider ruleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Rule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleAdapter() {
		if (ruleItemProvider == null) {
			ruleItemProvider = new RuleItemProvider(this);
		}

		return ruleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Actiontrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActiontriggerItemProvider actiontriggerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Actiontrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActiontriggerAdapter() {
		if (actiontriggerItemProvider == null) {
			actiontriggerItemProvider = new ActiontriggerItemProvider(this);
		}

		return actiontriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Step} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StepItemProvider stepItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Step}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStepAdapter() {
		if (stepItemProvider == null) {
			stepItemProvider = new StepItemProvider(this);
		}

		return stepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Steplink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SteplinkItemProvider steplinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Steplink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSteplinkAdapter() {
		if (steplinkItemProvider == null) {
			steplinkItemProvider = new SteplinkItemProvider(this);
		}

		return steplinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Provider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProviderItemProvider providerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Provider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProviderAdapter() {
		if (providerItemProvider == null) {
			providerItemProvider = new ProviderItemProvider(this);
		}

		return providerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Providerlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProviderlinkItemProvider providerlinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Providerlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProviderlinkAdapter() {
		if (providerlinkItemProvider == null) {
			providerlinkItemProvider = new ProviderlinkItemProvider(this);
		}

		return providerlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Vmwareprovider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VmwareproviderItemProvider vmwareproviderItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Vmwareprovider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVmwareproviderAdapter() {
		if (vmwareproviderItemProvider == null) {
			vmwareproviderItemProvider = new VmwareproviderItemProvider(this);
		}

		return vmwareproviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Openstackprovider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenstackproviderItemProvider openstackproviderItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Openstackprovider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenstackproviderAdapter() {
		if (openstackproviderItemProvider == null) {
			openstackproviderItemProvider = new OpenstackproviderItemProvider(this);
		}

		return openstackproviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Amazonprovider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonproviderItemProvider amazonproviderItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Amazonprovider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonproviderAdapter() {
		if (amazonproviderItemProvider == null) {
			amazonproviderItemProvider = new AmazonproviderItemProvider(this);
		}

		return amazonproviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Azureprovider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AzureproviderItemProvider azureproviderItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Azureprovider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAzureproviderAdapter() {
		if (azureproviderItemProvider == null) {
			azureproviderItemProvider = new AzureproviderItemProvider(this);
		}

		return azureproviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Providerinstancelink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProviderinstancelinkItemProvider providerinstancelinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Providerinstancelink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProviderinstancelinkAdapter() {
		if (providerinstancelinkItemProvider == null) {
			providerinstancelinkItemProvider = new ProviderinstancelinkItemProvider(this);
		}

		return providerinstancelinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Creation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreationItemProvider creationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Creation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreationAdapter() {
		if (creationItemProvider == null) {
			creationItemProvider = new CreationItemProvider(this);
		}

		return creationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Schedulingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchedulingpolicyItemProvider schedulingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Schedulingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchedulingpolicyAdapter() {
		if (schedulingpolicyItemProvider == null) {
			schedulingpolicyItemProvider = new SchedulingpolicyItemProvider(this);
		}

		return schedulingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Uniqueschedulingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniqueschedulingpolicyItemProvider uniqueschedulingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Uniqueschedulingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniqueschedulingpolicyAdapter() {
		if (uniqueschedulingpolicyItemProvider == null) {
			uniqueschedulingpolicyItemProvider = new UniqueschedulingpolicyItemProvider(this);
		}

		return uniqueschedulingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Recurringschedulingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecurringschedulingpolicyItemProvider recurringschedulingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Recurringschedulingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecurringschedulingpolicyAdapter() {
		if (recurringschedulingpolicyItemProvider == null) {
			recurringschedulingpolicyItemProvider = new RecurringschedulingpolicyItemProvider(this);
		}

		return recurringschedulingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Scalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalingpolicyItemProvider scalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Scalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalingpolicyAdapter() {
		if (scalingpolicyItemProvider == null) {
			scalingpolicyItemProvider = new ScalingpolicyItemProvider(this);
		}

		return scalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicscalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicscalingpolicyItemProvider dynamicscalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicscalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicscalingpolicyAdapter() {
		if (dynamicscalingpolicyItemProvider == null) {
			dynamicscalingpolicyItemProvider = new DynamicscalingpolicyItemProvider(this);
		}

		return dynamicscalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicadjustmentscalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicadjustmentscalingpolicyItemProvider dynamicadjustmentscalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicadjustmentscalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicadjustmentscalingpolicyAdapter() {
		if (dynamicadjustmentscalingpolicyItemProvider == null) {
			dynamicadjustmentscalingpolicyItemProvider = new DynamicadjustmentscalingpolicyItemProvider(this);
		}

		return dynamicadjustmentscalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Simpledynamicscalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpledynamicscalingpolicyItemProvider simpledynamicscalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Simpledynamicscalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpledynamicscalingpolicyAdapter() {
		if (simpledynamicscalingpolicyItemProvider == null) {
			simpledynamicscalingpolicyItemProvider = new SimpledynamicscalingpolicyItemProvider(this);
		}

		return simpledynamicscalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Stepdynamicscalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StepdynamicscalingpolicyItemProvider stepdynamicscalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Stepdynamicscalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStepdynamicscalingpolicyAdapter() {
		if (stepdynamicscalingpolicyItemProvider == null) {
			stepdynamicscalingpolicyItemProvider = new StepdynamicscalingpolicyItemProvider(this);
		}

		return stepdynamicscalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Manualscalingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManualscalingpolicyItemProvider manualscalingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Manualscalingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManualscalingpolicyAdapter() {
		if (manualscalingpolicyItemProvider == null) {
			manualscalingpolicyItemProvider = new ManualscalingpolicyItemProvider(this);
		}

		return manualscalingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Metric} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetricItemProvider metricItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Metric}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetricAdapter() {
		if (metricItemProvider == null) {
			metricItemProvider = new MetricItemProvider(this);
		}

		return metricItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Cpuutilisation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuutilisationItemProvider cpuutilisationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Cpuutilisation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCpuutilisationAdapter() {
		if (cpuutilisationItemProvider == null) {
			cpuutilisationItemProvider = new CpuutilisationItemProvider(this);
		}

		return cpuutilisationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Memoryutilisation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryutilisationItemProvider memoryutilisationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Memoryutilisation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryutilisationAdapter() {
		if (memoryutilisationItemProvider == null) {
			memoryutilisationItemProvider = new MemoryutilisationItemProvider(this);
		}

		return memoryutilisationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Allocationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllocationpolicyItemProvider allocationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Allocationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllocationpolicyAdapter() {
		if (allocationpolicyItemProvider == null) {
			allocationpolicyItemProvider = new AllocationpolicyItemProvider(this);
		}

		return allocationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Roundrobin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoundrobinItemProvider roundrobinItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Roundrobin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoundrobinAdapter() {
		if (roundrobinItemProvider == null) {
			roundrobinItemProvider = new RoundrobinItemProvider(this);
		}

		return roundrobinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Responsetime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponsetimeItemProvider responsetimeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Responsetime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponsetimeAdapter() {
		if (responsetimeItemProvider == null) {
			responsetimeItemProvider = new ResponsetimeItemProvider(this);
		}

		return responsetimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Cost} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CostItemProvider costItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Cost}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCostAdapter() {
		if (costItemProvider == null) {
			costItemProvider = new CostItemProvider(this);
		}

		return costItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Swappingpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwappingpolicyItemProvider swappingpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Swappingpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwappingpolicyAdapter() {
		if (swappingpolicyItemProvider == null) {
			swappingpolicyItemProvider = new SwappingpolicyItemProvider(this);
		}

		return swappingpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Sourcemigrationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourcemigrationpolicyItemProvider sourcemigrationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Sourcemigrationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourcemigrationpolicyAdapter() {
		if (sourcemigrationpolicyItemProvider == null) {
			sourcemigrationpolicyItemProvider = new SourcemigrationpolicyItemProvider(this);
		}

		return sourcemigrationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Livemigration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivemigrationItemProvider livemigrationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Livemigration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivemigrationAdapter() {
		if (livemigrationItemProvider == null) {
			livemigrationItemProvider = new LivemigrationItemProvider(this);
		}

		return livemigrationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Nonlivemigration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonlivemigrationItemProvider nonlivemigrationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Nonlivemigration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonlivemigrationAdapter() {
		if (nonlivemigrationItemProvider == null) {
			nonlivemigrationItemProvider = new NonlivemigrationItemProvider(this);
		}

		return nonlivemigrationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Migrationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MigrationpolicyItemProvider migrationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Migrationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMigrationpolicyAdapter() {
		if (migrationpolicyItemProvider == null) {
			migrationpolicyItemProvider = new MigrationpolicyItemProvider(this);
		}

		return migrationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicmigrationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicmigrationpolicyItemProvider dynamicmigrationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Dynamicmigrationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicmigrationpolicyAdapter() {
		if (dynamicmigrationpolicyItemProvider == null) {
			dynamicmigrationpolicyItemProvider = new DynamicmigrationpolicyItemProvider(this);
		}

		return dynamicmigrationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Manualmigrationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManualmigrationpolicyItemProvider manualmigrationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Manualmigrationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManualmigrationpolicyAdapter() {
		if (manualmigrationpolicyItemProvider == null) {
			manualmigrationpolicyItemProvider = new ManualmigrationpolicyItemProvider(this);
		}

		return manualmigrationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Loadvolume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadvolumeItemProvider loadvolumeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Loadvolume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadvolumeAdapter() {
		if (loadvolumeItemProvider == null) {
			loadvolumeItemProvider = new LoadvolumeItemProvider(this);
		}

		return loadvolumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Power} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerItemProvider powerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Power}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerAdapter() {
		if (powerItemProvider == null) {
			powerItemProvider = new PowerItemProvider(this);
		}

		return powerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Targetmigrationpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetmigrationpolicyItemProvider targetmigrationpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Targetmigrationpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetmigrationpolicyAdapter() {
		if (targetmigrationpolicyItemProvider == null) {
			targetmigrationpolicyItemProvider = new TargetmigrationpolicyItemProvider(this);
		}

		return targetmigrationpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Availableresources} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AvailableresourcesItemProvider availableresourcesItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Availableresources}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAvailableresourcesAdapter() {
		if (availableresourcesItemProvider == null) {
			availableresourcesItemProvider = new AvailableresourcesItemProvider(this);
		}

		return availableresourcesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Manualtargetselection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManualtargetselectionItemProvider manualtargetselectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Manualtargetselection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManualtargetselectionAdapter() {
		if (manualtargetselectionItemProvider == null) {
			manualtargetselectionItemProvider = new ManualtargetselectionItemProvider(this);
		}

		return manualtargetselectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Availableresourcesorload} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AvailableresourcesorloadItemProvider availableresourcesorloadItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Availableresourcesorload}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAvailableresourcesorloadAdapter() {
		if (availableresourcesorloadItemProvider == null) {
			availableresourcesorloadItemProvider = new AvailableresourcesorloadItemProvider(this);
		}

		return availableresourcesorloadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Targetresponsetime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetresponsetimeItemProvider targetresponsetimeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Targetresponsetime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetresponsetimeAdapter() {
		if (targetresponsetimeItemProvider == null) {
			targetresponsetimeItemProvider = new TargetresponsetimeItemProvider(this);
		}

		return targetresponsetimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Responsetimemetric} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponsetimemetricItemProvider responsetimemetricItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Responsetimemetric}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponsetimemetricAdapter() {
		if (responsetimemetricItemProvider == null) {
			responsetimemetricItemProvider = new ResponsetimemetricItemProvider(this);
		}

		return responsetimemetricItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancerpolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadbalancerpolicyItemProvider loadbalancerpolicyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Loadbalancerpolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadbalancerpolicyAdapter() {
		if (loadbalancerpolicyItemProvider == null) {
			loadbalancerpolicyItemProvider = new LoadbalancerpolicyItemProvider(this);
		}

		return loadbalancerpolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Roundrobinalgo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoundrobinalgoItemProvider roundrobinalgoItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Roundrobinalgo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoundrobinalgoAdapter() {
		if (roundrobinalgoItemProvider == null) {
			roundrobinalgoItemProvider = new RoundrobinalgoItemProvider(this);
		}

		return roundrobinalgoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Leastconn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeastconnItemProvider leastconnItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Leastconn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeastconnAdapter() {
		if (leastconnItemProvider == null) {
			leastconnItemProvider = new LeastconnItemProvider(this);
		}

		return leastconnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Leasttraffic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeasttrafficItemProvider leasttrafficItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Leasttraffic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeasttrafficAdapter() {
		if (leasttrafficItemProvider == null) {
			leasttrafficItemProvider = new LeasttrafficItemProvider(this);
		}

		return leasttrafficItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Wstaticrr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WstaticrrItemProvider wstaticrrItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Wstaticrr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWstaticrrAdapter() {
		if (wstaticrrItemProvider == null) {
			wstaticrrItemProvider = new WstaticrrItemProvider(this);
		}

		return wstaticrrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Source} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceItemProvider sourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Source}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceAdapter() {
		if (sourceItemProvider == null) {
			sourceItemProvider = new SourceItemProvider(this);
		}

		return sourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.First} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FirstItemProvider firstItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.First}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFirstAdapter() {
		if (firstItemProvider == null) {
			firstItemProvider = new FirstItemProvider(this);
		}

		return firstItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.cmf.occi.multicloud.modemo.Leastlatency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeastlatencyItemProvider leastlatencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.cmf.occi.multicloud.modemo.Leastlatency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeastlatencyAdapter() {
		if (leastlatencyItemProvider == null) {
			leastlatencyItemProvider = new LeastlatencyItemProvider(this);
		}

		return leastlatencyItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (recurrenceStepItemProvider != null) recurrenceStepItemProvider.dispose();
		if (arrayItemProvider != null) arrayItemProvider.dispose();
		if (arrofRecStepItemProvider != null) arrofRecStepItemProvider.dispose();
		if (horizontalgroupItemProvider != null) horizontalgroupItemProvider.dispose();
		if (loadbalancerItemProvider != null) loadbalancerItemProvider.dispose();
		if (elasticitycontrollerItemProvider != null) elasticitycontrollerItemProvider.dispose();
		if (instancegrouplinkItemProvider != null) instancegrouplinkItemProvider.dispose();
		if (loadbalancerlinkItemProvider != null) loadbalancerlinkItemProvider.dispose();
		if (elasticlinkItemProvider != null) elasticlinkItemProvider.dispose();
		if (ruleItemProvider != null) ruleItemProvider.dispose();
		if (actiontriggerItemProvider != null) actiontriggerItemProvider.dispose();
		if (stepItemProvider != null) stepItemProvider.dispose();
		if (steplinkItemProvider != null) steplinkItemProvider.dispose();
		if (providerItemProvider != null) providerItemProvider.dispose();
		if (providerlinkItemProvider != null) providerlinkItemProvider.dispose();
		if (vmwareproviderItemProvider != null) vmwareproviderItemProvider.dispose();
		if (openstackproviderItemProvider != null) openstackproviderItemProvider.dispose();
		if (amazonproviderItemProvider != null) amazonproviderItemProvider.dispose();
		if (azureproviderItemProvider != null) azureproviderItemProvider.dispose();
		if (providerinstancelinkItemProvider != null) providerinstancelinkItemProvider.dispose();
		if (creationItemProvider != null) creationItemProvider.dispose();
		if (schedulingpolicyItemProvider != null) schedulingpolicyItemProvider.dispose();
		if (uniqueschedulingpolicyItemProvider != null) uniqueschedulingpolicyItemProvider.dispose();
		if (recurringschedulingpolicyItemProvider != null) recurringschedulingpolicyItemProvider.dispose();
		if (scalingpolicyItemProvider != null) scalingpolicyItemProvider.dispose();
		if (dynamicscalingpolicyItemProvider != null) dynamicscalingpolicyItemProvider.dispose();
		if (dynamicadjustmentscalingpolicyItemProvider != null) dynamicadjustmentscalingpolicyItemProvider.dispose();
		if (simpledynamicscalingpolicyItemProvider != null) simpledynamicscalingpolicyItemProvider.dispose();
		if (stepdynamicscalingpolicyItemProvider != null) stepdynamicscalingpolicyItemProvider.dispose();
		if (manualscalingpolicyItemProvider != null) manualscalingpolicyItemProvider.dispose();
		if (metricItemProvider != null) metricItemProvider.dispose();
		if (cpuutilisationItemProvider != null) cpuutilisationItemProvider.dispose();
		if (memoryutilisationItemProvider != null) memoryutilisationItemProvider.dispose();
		if (allocationpolicyItemProvider != null) allocationpolicyItemProvider.dispose();
		if (roundrobinItemProvider != null) roundrobinItemProvider.dispose();
		if (responsetimeItemProvider != null) responsetimeItemProvider.dispose();
		if (costItemProvider != null) costItemProvider.dispose();
		if (swappingpolicyItemProvider != null) swappingpolicyItemProvider.dispose();
		if (sourcemigrationpolicyItemProvider != null) sourcemigrationpolicyItemProvider.dispose();
		if (livemigrationItemProvider != null) livemigrationItemProvider.dispose();
		if (nonlivemigrationItemProvider != null) nonlivemigrationItemProvider.dispose();
		if (migrationpolicyItemProvider != null) migrationpolicyItemProvider.dispose();
		if (dynamicmigrationpolicyItemProvider != null) dynamicmigrationpolicyItemProvider.dispose();
		if (manualmigrationpolicyItemProvider != null) manualmigrationpolicyItemProvider.dispose();
		if (loadvolumeItemProvider != null) loadvolumeItemProvider.dispose();
		if (powerItemProvider != null) powerItemProvider.dispose();
		if (targetmigrationpolicyItemProvider != null) targetmigrationpolicyItemProvider.dispose();
		if (availableresourcesItemProvider != null) availableresourcesItemProvider.dispose();
		if (manualtargetselectionItemProvider != null) manualtargetselectionItemProvider.dispose();
		if (availableresourcesorloadItemProvider != null) availableresourcesorloadItemProvider.dispose();
		if (targetresponsetimeItemProvider != null) targetresponsetimeItemProvider.dispose();
		if (responsetimemetricItemProvider != null) responsetimemetricItemProvider.dispose();
		if (loadbalancerpolicyItemProvider != null) loadbalancerpolicyItemProvider.dispose();
		if (roundrobinalgoItemProvider != null) roundrobinalgoItemProvider.dispose();
		if (leastconnItemProvider != null) leastconnItemProvider.dispose();
		if (leasttrafficItemProvider != null) leasttrafficItemProvider.dispose();
		if (wstaticrrItemProvider != null) wstaticrrItemProvider.dispose();
		if (sourceItemProvider != null) sourceItemProvider.dispose();
		if (firstItemProvider != null) firstItemProvider.dispose();
		if (leastlatencyItemProvider != null) leastlatencyItemProvider.dispose();
	}

}
